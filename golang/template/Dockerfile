<%= generation_message %>
FROM <%= base_image %>
MAINTAINER Instructure

USER root

ENV GOLANG_VERSION <%= full_version %>

RUN dpkgArch="$(dpkg --print-architecture)"; \
  case "$dpkgArch" in \
    amd64) \
      export GOLANG_DOWNLOAD_URL="https://storage.googleapis.com/golang/go$GOLANG_VERSION.linux-amd64.tar.gz"; \
      export GOLANG_DOWNLOAD_SHA256="<%= package_sha %>"; \
      ;; \
    arm64) \
      export GOLANG_DOWNLOAD_URL="https://storage.googleapis.com/golang/go$GOLANG_VERSION.linux-arm64.tar.gz"; \
      export GOLANG_DOWNLOAD_SHA256="<%= package_sha_arm64 %>"; \
      ;; \
    *) echo >&2 "unsupported architecture: $dpkgArch"; exit 1 ;; \
  esac; \
  curl -fsSL "$GOLANG_DOWNLOAD_URL" -o golang.tar.gz \
  && echo "$GOLANG_DOWNLOAD_SHA256  golang.tar.gz" | sha256sum -c - \
  && tar -C /usr/local -xzf golang.tar.gz \
  && rm golang.tar.gz

<% has_private_gomods = Gem::Dependency.new('go', '>= 1.13') -%>
<% if has_private_gomods.match?('go', full_version) -%>
# For private gomodules that install via git, and to support Makefiles
RUN apt-get update \
  && apt-get install -y openssh-client git make \
  && apt-get clean
RUN ssh-keyscan -p 29418 -H gerrit.instructure.com 2>/dev/null >> /etc/ssh/ssh_known_hosts
ENV GOPRIVATE gerrit.instructure.com,github.com/instructure
<% end -%>

ENV GOPATH /go
ENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH
ENV SRCPATH $GOPATH/src
RUN mkdir -p $SRCPATH && chown -R docker:docker $GOPATH
WORKDIR $SRCPATH

USER docker
